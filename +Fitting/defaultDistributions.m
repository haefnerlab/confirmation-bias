function distributions = defaultDistributions(fields)
distributions = struct(...
    'prior_C', betavar(2, 2, 50), ...
    'lapse', betavar(1, 10, 50), ...
    'gamma', betavar(1, 1, 50), ...
    'var_s_per_sample', gammavar(1, 5, 50), ...
    'var_x', gammavar(1, 5, 50), ...
    'updates', integers(5, 10), ...
    'samples', integers(5, 100), ...
    'alpha', gammavar(1, 100, 50));

if nargin >= 1
    defaultFields = fieldnames(distributions);
    toRemove = setdiff(defaultFields, fields);
    for iRemove=1:length(toRemove)
        distributions = rmfield(distributions, toRemove{iRemove});
    end
end

end

function distrib = betavar(a, b, effective_pts)
distrib = struct(...
    'priorpdf', @(x) betapdf(betaclip(x), a, b), ...
    'logpriorpdf', @(x) logbetapdf(betaclip(x), a, b), ...
    'proprnd', @(x) betarnd(a + effective_pts * betaclip(x), b + effective_pts * (1-betaclip(x))), ...
    'proppdf', @(x1, x2) betapdf(betaclip(x1), a + effective_pts * betaclip(x2), b + effective_pts * (1-betaclip(x2))), ...
    'logproppdf', @(x1, x2) logbetapdf(betaclip(x1), a + effective_pts * betaclip(x2), b + effective_pts * (1-betaclip(x2))));
end

function distrib = gammavar(k, t, prop_shape)
distrib = struct(...
    'priorpdf', @(x) gampdf(gammaclip(x), k, t), ...
    'logpriorpdf', @(x) loggampdf(gammaclip(x), k, t), ...
    'proprnd', @(x) gamrnd(prop_shape, gammaclip(x)/prop_shape), ...
    'proppdf', @(x1, x2) gampdf(gammaclip(x1), prop_shape, gammaclip(x2)/prop_shape), ...
    'logproppdf', @(x1, x2) loggampdf(gammaclip(x1), prop_shape, gammaclip(x2)/prop_shape));
end

function distrib =  integers(halfrange, tau)
distrib = struct(...
    'priorpdf', @(i) exp(-i/tau), ...
    'logpriorpdf', @(i) -i/tau, ...
    'proprnd', @(i) randi([max(1, i-halfrange), i+halfrange]), ...
    'proppdf', @(i1, i2) double(i1 >= max(1, i2-halfrange) && i1 <= i2+halfrange) / (i2+halfrange-max(1,i2-halfrange)+1));
end

function lp = logbetapdf(x, a, b)
lp = (a - 1) * log(x) + (b - 1) * log(1 - x) - betaln(a, b);
end

function lp = loggampdf(x, k, theta)
lp = (k - 1) * log(x) - x / theta - gammaln(k) - k * log(theta);
end

function val = betaclip(val)
val = min(max(val, 1e-6), 1-1e-6);
end
function val = gammaclip(val)
val = max(val, 1e-6);
end